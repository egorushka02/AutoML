services:
  airflow-init:
    image: apache/airflow:2.7.0
    command: >
      bash -c "pip install --user apache-airflow==2.7.0 mlflow==2.8.1 pandas==2.0.3 scikit-learn==1.3.0 python-dotenv==1.0.0 &&
               echo 'Dependencies installed successfully'"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - airflow_deps:/home/airflow/.local
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U airflow"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  airflow-webserver:
    image: apache/airflow:2.7.0
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
               airflow webserver"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
    volumes:
      - ./lab1_titanic/dags:/opt/airflow/dags
      - ./lab1_titanic/scripts:/opt/airflow/scripts
      - airflow_deps:/home/airflow/.local
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - airflow-init
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  airflow-scheduler:
    image: apache/airflow:2.7.0
    command: airflow scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
    volumes:
      - ./lab1_titanic/dags:/opt/airflow/dags
      - ./lab1_titanic/scripts:/opt/airflow/scripts
      - airflow_deps:/home/airflow/.local
    depends_on:
      - postgres
      - airflow-webserver
      - airflow-init
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.15.1
    command: 
      - bash
      - -c
      - |
        pip install boto3 --quiet
        mlflow server --host 0.0.0.0 
    expose:
      - "5000"
    ports:
      - "5001:5000"
    volumes:
      - mlflow_data:/mlflow
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

volumes:
  postgres_data:
  mlflow_data:
  airflow_deps: